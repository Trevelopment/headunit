#!/bin/sh

MIN=5
RAND=`expr $RANDOM % 10 + $MIN`
sleep $RAND

SCRIPT="/tmp/data_persist/dev/bin/headunit"
SCRIPTPATH=$(dirname "$SCRIPT")

export LD_LIBRARY_PATH="${SCRIPTPATH}/headunit_libs:/jci/lib:/jci/opera/3rdpartylibs/freetype:/usr/lib/imx-mm/audio-codec:/usr/lib/imx-mm/parser:/data_persist/dev/lib:/resources/aio/lib"
#override some GST plugins with these
export GST_PLUGIN_PATH="/usr/lib/gstreamer-0.10:/tmp/data_persist/dev/bin/headunit/headunit_libs"

DEBUG=0

conf='{
    "launchOnDevice": true,
    "carGPS": true,
    "wifiTransport": false,
    "reverseGPS": false
}'

if ! [ -e /tmp/root/headunit.json ]; then
 printf "%s\n" "$conf" > /tmp/root/headunit.json
fi

start_headunit()
{
   rm -f /tmp/root/headunit-wireless.status
   sed -i 's."wifiTransport": true."wifiTransport": false.g' /tmp/root/headunit.json 
   taskset 0xFFFFFFFF "${SCRIPTPATH}/headunit" "$@" > /dev/null 2>&1 &
   sleep 2
   touch /tmp/root/headunit.status
   [ $DEBUG -eq 1 ] && echo "=== headunit-usb ==="
   [ $DEBUG -eq 1 ] && cat /tmp/root/headunit.json  >> /tmp/root/headunit.log
   [ $DEBUG -eq 1 ] && echo "===================="
}

start_AAwireless()
{
    rm -f /tmp/root/headunit.status
    sed -i 's."wifiTransport": false."wifiTransport": true.g' /tmp/root/headunit.json 
    taskset 0xFFFFFFFF "${SCRIPTPATH}/headunit" "$@" > /dev/null 2>&1 &
    sleep 2
    touch /tmp/root/headunit-wireless.status
   [ $DEBUG -eq 1 ] && echo "=== headunit-wifi ==="
   [ $DEBUG -eq 1 ] && cat /tmp/root/headunit.json  >> /tmp/root/headunit.log
   [ $DEBUG -eq 1 ] && echo "===================="
}

rm -f /tmp/root/headunit.status
rm -f /tmp/root/headunit-wireless.status

pkill -f 'aap_service'
pkill -f 'carplayd'
PID=`ps |grep L_jciCARPLAY|head -1|awk '{print $1}'`
kill -9 $PID

start_headunit

while true
do
 NET_CHECK=`netstat -rn|awk '$2=="192.168.43.1" {print}'|wc -l`

 if [ -e /tmp/root/usb_connect ]; then
  USBCHECK=1
  [ $DEBUG -eq 1 ] && echo "USB attach" >> /tmp/root/headunit.log
 else
  USBCHECK=0
  [ $DEBUG -eq 1 ] && echo "USB detach" >> /tmp/root/headunit.log
 fi

 if [ $NET_CHECK == 1 ] && [ $USBCHECK == 0 ]; then
    [ $DEBUG -eq 1 ] && echo "WLAN Mode" >> /tmp/root/headunit.log
    if [ -e /tmp/root/headunit.status ]; then
        killall -q headunit
    fi

    if ! [ -e /tmp/root/headunit-wireless.status ]; then
        [ $DEBUG -eq 1 ] && echo "Start WIRELESS" >> /tmp/root/headunit.log  
        start_AAwireless
    fi

 else
    #echo "USB"
    [ $DEBUG -eq 1 ] && echo "USB Mode" >> /tmp/root/headunit.log  
    check_headunit=`ps|grep 'bin/headunit'|grep -v grep|wc -l|awk '{print $1}'`
    [ $DEBUG -eq 1 ] && echo "check_headunit = $check_headunit" >> /tmp/root/headunit.log  

    [ $check_headunit -eq 0 ] && rm -f /tmp/root/headunit-wireless.status
    [ $check_headunit -eq 0 ] && rm -f /tmp/root/headunit.status

    if [ -e /tmp/root/headunit-wireless.status ]; then
        killall -q headunit
    fi
    if ! [ -e /tmp/root/headunit.status ]; then
        [ $DEBUG -eq 1 ] && echo "Start USB" >> /tmp/root/headunit.log  
        start_headunit
    fi
 fi

 RAND=`expr $RANDOM % 5`
 echo "go sleep $RAND"
 sleep $RAND

done
